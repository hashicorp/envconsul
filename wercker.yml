box: wercker/golang

# Build definition
build:
    steps:
        # Sets the go workspace and places you package
        # at the right place in the workspace tree
        - setup-go-workspace

        # Build the project
        - script:
            name: go build
            code: make build

        # Test the project
        - script:
            name: go test
            code: make coveralls

        - script:
            name: build distribution
            code: |
                make dist
                mv $EXECUTABLE-*.tgz $WERCKER_OUTPUT_DIR
                mv $EXECUTABLE $WERCKER_OUTPUT_DIR

    after-steps:
      - hipchat-notify:
          token: $HIPCHAT_TOKEN
          room-id: $HIPCHAT_ROOM_ID

deploy:
    steps:
      - script:
          name: get version
          code: export EXECUTABLE_VERSION=$(./$EXECUTABLE -v | awk '{print $3}')
      - github-create-release:
          token: $GITHUB_TOKEN
          tag: v$EXECUTABLE_VERSION
          title: $EXECUTABLE v$EXECUTABLE_VERSION
      - github-upload-asset:
          token: $GITHUB_TOKEN
          file: $EXECUTABLE-$EXECUTABLE_VERSION.tgz
          filename: $EXECUTABLE-$EXECUTABLE_VERSION-linux-amd64.tgz

    after-steps:
      - hipchat-notify:
          token: $HIPCHAT_TOKEN
          room-id: $HIPCHAT_ROOM_ID
