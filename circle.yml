machine:
  environment:
    EXECUTABLE_NAME: envetcd
    ETCD_DOWNLOAD_VERSION: v2.0.8
    ETCD_ENDPOINT: http://127.0.0.1:4001
    GH_RELEASE_VERSION: 2.1.0

checkout:
  post:
    ## these commands are required to configure the go environment properly
    - mkdir -p $HOME/.go_workspace/src/_/home/ubuntu
    - mkdir -p $HOME/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME
    - ln -sf `pwd` $HOME/.go_workspace/src/_/home/ubuntu
    - ln -sf `pwd` $HOME/.go_workspace/src/github.com/$CIRCLE_PROJECT_USERNAME

dependencies:
  cache_directories:
    - ~/bin
    - ~/.go_workspace/bin

  override:
    # godep should be the only build dependency
    - if [[ ! -e ~/.go_workspace/bin/godep ]]; then go get -v github.com/tools/godep; fi

    # gocov and goveralls are required for coverage testing and reporting to coveralls
    - if [[ ! -e ~/.go_workspace/bin/gocov ]]; then go get -v github.com/axw/gocov/gocov; fi
    - if [[ ! -e ~/.go_workspace/bin/goveralls ]]; then go get -v github.com/mattn/goveralls; fi

    # install etcd
    - if [[ ! -e ~/bin/etcd ]]; then wget https://github.com/coreos/etcd/releases/download/${ETCD_DOWNLOAD_VERSION}/etcd-${ETCD_DOWNLOAD_VERSION}-linux-amd64.tar.gz && tar xzvf etcd-${ETCD_DOWNLOAD_VERSION}-linux-amd64.tar.gz && mv etcd-${ETCD_DOWNLOAD_VERSION}-linux-amd64/etcd ${HOME}/bin/ && rm -rf etcd-${ETCD_DOWNLOAD_VERSION}-linux-amd64/ etcd-${ETCD_DOWNLOAD_VERSION}-linux-amd64.tar.gz; fi

    # install gh-release
    - if [[ ! -e ~/bin/gh-release ]]; then wget https://github.com/progrium/gh-release/releases/download/v${GH_RELEASE_VERSION}/gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz && tar xzvf gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz && mv gh-release ${HOME}/bin/ && rm -rf gh-release_${GH_RELEASE_VERSION}_linux_x86_64.tgz; fi

test:
  pre:
    # start etcd
    - etcd:
        background: true

  override:
    - make build
    - make coveralls
    - make release

deployment:
  github:
    branch: master
    commands:
      - gh-release create ${CIRCLE_PROJECT_USERNAME}/${CIRCLE_PROJECT_REPONAME} $(./${EXECUTABLE_NAME} -v | awk '{print $3}')
